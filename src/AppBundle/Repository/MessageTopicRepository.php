<?php

namespace AppBundle\Repository;

use AppBundle\Entity\MessageTopic;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Common\Persistence\ManagerRegistry;

/**
 * MessageTopicRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MessageTopicRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, MessageTopic::class);
    }



//    public function findAllByUser(int $userId)
//    {
//        return $this->createQueryBuilder('t')
//            ->join('t.sender', 's')
//            ->join('t.recipient', 'r')
//            ->addSelect('s')
//            ->addSelect('r')
//            ->where('r.id = :userId OR s.id = :userId')
//            ->setParameter('userId', $userId)
//            ->orderBy('t.updatedOn', 'DESC')
//            ->getQuery()
//            ->getResult();
//    }
//
//    public function findOneById(int $id)
//    {
//        return $this->createQueryBuilder('t')
//            ->join('t.messages', 'm')
//            ->join('m.sender', 's')
//            ->addSelect('m')
//            ->addSelect('s')
//            ->where('t.id = :id')
//            ->andWhere('t.deletedOn is null')
//            ->setParameter('id', $id)
//            ->getQuery()
//            ->getOneOrNullResult();
//    }


//    public function getNewTopicsCount(int $userId)
//    {
//        return $this->createQueryBuilder('t')
//            ->select('count(t.id)')
//            ->where('t.recipient = :userId or t.sender = :userId')
//            ->andWhere('t.isRead = 0 and t.updatedBy != :userId')
//            ->setParameter('userId', $userId)
//            ->getQuery()
//            ->getSingleScalarResult();
//    }
}
